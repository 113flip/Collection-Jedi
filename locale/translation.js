// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('Comb');
gettext('Const');
gettext('Varios');
gettext('Codificadores');
gettext('Decodificadores');
gettext('Demux');
gettext('Mux');
gettext('Puertas');
gettext('Tablas');
gettext('cod-2-1');
gettext('Codificador de 2 a 1. La salida zero se activa cuando ninguna entrada está activada');
gettext('cod-4-2-bus');
gettext('Codificador de 4 a 2, con prioridad. La salida zero se activa cuando ninguna entrada está activad. Entradas y salidas de buses');
gettext('cod-4-2');
gettext('Codificador de 4 a 2, con prioridad. La salida zero se activa cuando ninguna entrada está activad');
gettext('7Seg');
gettext('BCD-ASCII');
gettext('Decodificador de BCD a ASCII');
gettext('Circuito combinacional de 4 entradas y 8 salidas');
gettext('decod-1-2');
gettext('Decodificador de 1 a 2');
gettext('decod-2-4-bus');
gettext('Decodificador de 2 a 4, con salida en bus');
gettext('decod-2-4');
gettext('Decodificador de 2 a 4');
gettext('decod-3-8-bus');
gettext('Decodificador de 3 a 8, con salida en bus');
gettext('decod-3-8');
gettext('Decodificador de 3 a 8');
gettext('Anodo-comun');
gettext('Catodo-comun');
gettext('displayBit');
gettext('DisplayBit. Decodificador de 1 bit a 7 segmentos. Ánodo común');
gettext('displayBit2');
gettext('DisplayBit2. Decodificador de 2 bits a 7 segmentos. Ánodo común');
gettext('displayBit3');
gettext('DisplayBit3. Decodificador de 3 bits a 7 segmentos. Ánodo común');
gettext('displayDEC');
gettext('DisplayDEC. Decodificador BCD a 7 segmentos. Ánodo común');
gettext('displayHEX');
gettext('DisplayHEX. Decodificador de binario a hexadecimal-7 segmentos. Ánodo común');
gettext('displayBit');
gettext('DisplayBit. Decodificador de 1 bit a 7 segmentos. Cátodo común');
gettext('displayBit2');
gettext('DisplayBit2. Decodificador de 2 bits a 7 segmentos. Cátodo común');
gettext('displayBit3');
gettext('DisplayBit3. Decodificador de 3 bits a 7 segmentos. Cátodo común');
gettext('displayDEC');
gettext('DisplayDEC. Decodificador BCD a 7 segmentos. Cátodo común');
gettext('displayHEX');
gettext('DisplayHEX. Decodificador de binario a hexadecimal-7 segmentos. Cátodo común');
gettext('1-Bit');
gettext('Demux-1-2');
gettext('Demultiplexor de 1 bit, de 1 a 2');
gettext('Demux-2-4');
gettext('Demultiplexor de 1 bit, de 2 a 4');
gettext('1-Bit');
gettext('16-bits');
gettext('2-Bits');
gettext('24-Bits');
gettext('3-Bits');
gettext('4-Bits');
gettext('5-Bits');
gettext('7-Bit');
gettext('8-Bit');
gettext('Mux-2-1-flip');
gettext('Multiplexor de 2 a 1');
gettext('Mux-2-1');
gettext('Mux-4-1-flip');
gettext('Multiplexor de 4 a 1. Implementado en verilog');
gettext('Mux-4-1');
gettext('Mux-2-1');
gettext('Multiplexor de 2 a 1 de 16 bits');
gettext('Mux-2-1-flip');
gettext('Multiplexor de 2 a 1 de 2 bits');
gettext('Mux-2-1');
gettext('Mux-4-1');
gettext('Multiplexor de 4 a 1 de 2 bits');
gettext('Mux-2-1');
gettext('Multiplexor de 2 a 1 de 24 bits');
gettext('Mux-2-1-flip');
gettext('Multiplexor de 2 a 1 de 3 bits');
gettext('Mux-2-1');
gettext('Mux-4-1');
gettext('Multiplexor de 4 a 1 de 3 bits');
gettext('Mux-2-1-flip');
gettext('Multiplexor de 2 a 1 de 4 bits');
gettext('Mux-2-1');
gettext('Mux-4-1');
gettext('Multiplexor de 4 a 1 de 4 bits');
gettext('Mux-2-1');
gettext('Multiplexor de 2 a 1 de 5 bits');
gettext('Mux-2-1');
gettext('Multiplexor de 2 a 1 de 7 bits');
gettext('Mux-2-1-flip');
gettext('Multiplexor de 2 a 1 de 8 bits');
gettext('Mux-2-1');
gettext('Mux-4-1');
gettext('Multiplexor de 4 a 1 de 8 bits');
gettext('04-bits');
gettext('Bus');
gettext('and');
gettext('Puerta AND');
gettext('and3');
gettext('Puerta AND de 3 entradas');
gettext('nand');
gettext('Puerta NAND');
gettext('nor');
gettext('Puerta NOR');
gettext('not');
gettext('Puerta NOT');
gettext('or');
gettext('Puerta OR');
gettext('or3');
gettext('Puerta OR de 3 entradas');
gettext('or4');
gettext('Puerta OR de 4 entradas');
gettext('xnor');
gettext('Puerta XNOR');
gettext('xor');
gettext('Puerta XOR');
gettext('not');
gettext('Puerta NOT para bus de 4 bits');
gettext('tablas_bin');
gettext('tablas_hex');
gettext('1bit_entrada');
gettext('2bit_entrada');
gettext('3bit_entrada');
gettext('4bit_entrada');
gettext('5bit_entrada');
gettext('6bit_entrada');
gettext('7bit_entrada');
gettext('8bit_entrada');
gettext('tabla-bin-1-1');
gettext('Circuito combinacional de 1 entradas y 1 salidas');
gettext('tabla-bin-1-2');
gettext('Circuito combinacional de 1 entradas y 2 salidas');
gettext('tabla-bin-1-3');
gettext('Circuito combinacional de 1 entradas y 3 salidas');
gettext('tabla-bin-1-4');
gettext('Circuito combinacional de 1 entradas y 4 salidas');
gettext('tabla-bin-1-5');
gettext('Circuito combinacional de 1 entradas y 5 salidas');
gettext('tabla-bin-1-6');
gettext('Circuito combinacional de 1 entradas y 6 salidas');
gettext('tabla-bin-1-7');
gettext('Circuito combinacional de 1 entradas y 7 salidas');
gettext('tabla-bin-1-8');
gettext('Circuito combinacional de 1 entradas y 8 salidas');
gettext('tabla-bin-2-1');
gettext('Circuito combinacional de 2 entradas y 1 salidas');
gettext('tabla-bin-2-2');
gettext('Circuito combinacional de 2 entradas y 2 salidas');
gettext('tabla-bin-2-3');
gettext('Circuito combinacional de 2 entradas y 3 salidas');
gettext('tabla-bin-2-4');
gettext('Circuito combinacional de 2 entradas y 4 salidas');
gettext('tabla-bin-2-5');
gettext('Circuito combinacional de 2 entradas y 5 salidas');
gettext('tabla-bin-2-6');
gettext('Circuito combinacional de 2 entradas y 6 salidas');
gettext('tabla-bin-2-7');
gettext('Circuito combinacional de 2 entradas y 7 salidas');
gettext('tabla-bin-2-8');
gettext('Circuito combinacional de 2 entradas y 8 salidas');
gettext('tabla-bin-3-1');
gettext('Circuito combinacional de 3 entradas y 1 salidas');
gettext('tabla-bin-3-2');
gettext('Circuito combinacional de 3 entradas y 2 salidas');
gettext('tabla-bin-3-3');
gettext('Circuito combinacional de 3 entradas y 3 salidas');
gettext('tabla-bin-3-4');
gettext('Circuito combinacional de 3 entradas y 4 salidas');
gettext('tabla-bin-3-5');
gettext('Circuito combinacional de 3 entradas y 5 salidas');
gettext('tabla-bin-3-6');
gettext('Circuito combinacional de 3 entradas y 6 salidas');
gettext('tabla-bin-3-7');
gettext('Circuito combinacional de 3 entradas y 7 salidas');
gettext('tabla-bin-3-8');
gettext('Circuito combinacional de 3 entradas y 8 salidas');
gettext('tabla-bin-4-1');
gettext('Circuito combinacional de 4 entradas y 1 salidas');
gettext('tabla-bin-4-2');
gettext('Circuito combinacional de 4 entradas y 2 salidas');
gettext('tabla-bin-4-3');
gettext('Circuito combinacional de 4 entradas y 3 salidas');
gettext('tabla-bin-4-4');
gettext('Circuito combinacional de 4 entradas y 4 salidas');
gettext('tabla-bin-4-5');
gettext('Circuito combinacional de 4 entradas y 5 salidas');
gettext('tabla-bin-4-6');
gettext('Circuito combinacional de 4 entradas y 6 salidas');
gettext('tabla-bin-4-7');
gettext('Circuito combinacional de 4 entradas y 7 salidas');
gettext('tabla-bin-4-8');
gettext('tabla-bin-5-1');
gettext('Circuito combinacional de 5 entradas y 1 salidas');
gettext('tabla-bin-5-2');
gettext('Circuito combinacional de 5 entradas y 2 salidas');
gettext('tabla-bin-5-3');
gettext('Circuito combinacional de 5 entradas y 3 salidas');
gettext('tabla-bin-5-4');
gettext('Circuito combinacional de 5 entradas y 4 salidas');
gettext('tabla-bin-5-5');
gettext('Circuito combinacional de 5 entradas y 5 salidas');
gettext('tabla-bin-5-6');
gettext('Circuito combinacional de 5 entradas y 6 salidas');
gettext('tabla-bin-5-7');
gettext('Circuito combinacional de 5 entradas y 7 salidas');
gettext('tabla-bin-5-8');
gettext('Circuito combinacional de 5 entradas y 8 salidas');
gettext('tabla-bin-6-1');
gettext('Circuito combinacional de 6 entradas y 1 salidas');
gettext('tabla-bin-6-2');
gettext('Circuito combinacional de 6 entradas y 2 salidas');
gettext('tabla-bin-6-3');
gettext('Circuito combinacional de 6 entradas y 3 salidas');
gettext('tabla-bin-6-4');
gettext('Circuito combinacional de 6 entradas y 4 salidas');
gettext('tabla-bin-6-5');
gettext('Circuito combinacional de 6 entradas y 5 salidas');
gettext('tabla-bin-6-6');
gettext('Circuito combinacional de 6 entradas y 6 salidas');
gettext('tabla-bin-6-7');
gettext('Circuito combinacional de 6 entradas y 7 salidas');
gettext('tabla-bin-6-8');
gettext('Circuito combinacional de 6 entradas y 8 salidas');
gettext('tabla-bin-7-1');
gettext('Circuito combinacional de 7 entradas y 1 salidas');
gettext('tabla-bin-7-2');
gettext('Circuito combinacional de 7 entradas y 2 salidas');
gettext('tabla-bin-7-3');
gettext('Circuito combinacional de 7 entradas y 3 salidas');
gettext('tabla-bin-7-4');
gettext('Circuito combinacional de 7 entradas y 4 salidas');
gettext('tabla-bin-7-5');
gettext('Circuito combinacional de 7 entradas y 5 salidas');
gettext('tabla-bin-7-6');
gettext('Circuito combinacional de 7 entradas y 6 salidas');
gettext('tabla-bin-7-7');
gettext('Circuito combinacional de 7 entradas y 7 salidas');
gettext('tabla-bin-7-8');
gettext('Circuito combinacional de 7 entradas y 8 salidas');
gettext('tabla-bin-8-1');
gettext('Circuito combinacional de 8 entradas y 1 salidas');
gettext('tabla-bin-8-2');
gettext('Circuito combinacional de 8 entradas y 2 salidas');
gettext('tabla-bin-8-3');
gettext('Circuito combinacional de 8 entradas y 3 salidas');
gettext('tabla-bin-8-4');
gettext('Circuito combinacional de 8 entradas y 4 salidas');
gettext('tabla-bin-8-5');
gettext('Circuito combinacional de 8 entradas y 5 salidas');
gettext('tabla-bin-8-6');
gettext('Circuito combinacional de 8 entradas y 6 salidas');
gettext('tabla-bin-8-7');
gettext('Circuito combinacional de 8 entradas y 7 salidas');
gettext('tabla-bin-8-8');
gettext('Circuito combinacional de 8 entradas y 8 salidas');
gettext('1bit_entrada');
gettext('2bit_entrada');
gettext('3bit_entrada');
gettext('4bit_entrada');
gettext('5bit_entrada');
gettext('6bit_entrada');
gettext('7bit_entrada');
gettext('8bit_entrada');
gettext('tabla-hex-1-1');
gettext('tabla-hex-1-2');
gettext('tabla-hex-1-3');
gettext('tabla-hex-1-4');
gettext('tabla-hex-1-5');
gettext('tabla-hex-1-6');
gettext('tabla-hex-1-7');
gettext('tabla-hex-1-8');
gettext('tabla-hex-2-1');
gettext('tabla-hex-2-2');
gettext('tabla-hex-2-3');
gettext('tabla-hex-2-4');
gettext('tabla-hex-2-5');
gettext('tabla-hex-2-6');
gettext('tabla-hex-2-7');
gettext('tabla-hex-2-8');
gettext('tabla-hex-3-1');
gettext('tabla-hex-3-2');
gettext('tabla-hex-3-3');
gettext('tabla-hex-3-4');
gettext('tabla-hex-3-5');
gettext('tabla-hex-3-6');
gettext('tabla-hex-3-7');
gettext('tabla-hex-3-8');
gettext('tabla-hex-4-1');
gettext('tabla-hex-4-2');
gettext('tabla-hex-4-3');
gettext('tabla-hex-4-4');
gettext('tabla-hex-4-5');
gettext('tabla-hex-4-6');
gettext('tabla-hex-4-7');
gettext('tabla-hex-4-8');
gettext('tabla-hex-5-1');
gettext('tabla-hex-5-2');
gettext('tabla-hex-5-3');
gettext('tabla-hex-5-4');
gettext('tabla-hex-5-5');
gettext('tabla-hex-5-6');
gettext('tabla-hex-5-7');
gettext('tabla-hex-5-8');
gettext('tabla-hex-6-1');
gettext('tabla-hex-6-2');
gettext('tabla-hex-6-3');
gettext('tabla-hex-6-4');
gettext('tabla-hex-6-5');
gettext('tabla-hex-6-6');
gettext('tabla-hex-6-7');
gettext('tabla-hex-6-8');
gettext('tabla-hex-7-1');
gettext('tabla-hex-7-2');
gettext('tabla-hex-7-3');
gettext('tabla-hex-7-4');
gettext('tabla-hex-7-5');
gettext('tabla-hex-7-6');
gettext('tabla-hex-7-7');
gettext('tabla-hex-7-8');
gettext('tabla-hex-8-1');
gettext('tabla-hex-8-2');
gettext('tabla-hex-8-3');
gettext('tabla-hex-8-4');
gettext('tabla-hex-8-5');
gettext('tabla-hex-8-6');
gettext('tabla-hex-8-7');
gettext('tabla-hex-8-8');
gettext('7Seg');
gettext('Bits');
gettext('Bus');
gettext('Anodo_comun');
gettext('Catodo_comun');
gettext('Digitos');
gettext('Letras');
gettext('Digitos');
gettext('Letras');
gettext('0');
gettext('Constante de  7 bits para mostrar el dígito 0 en un display de 7 segmentos. Ánodo común');
gettext('Valor genérico constante, de 7 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 0 | 0 | 0 | 0 | 0 | 1 |');
gettext('1');
gettext('Constante de  7 bits para mostrar el dígito 1 en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 0 | 0 | 1 | 1 | 1 | 1 |');
gettext('2');
gettext('Constante de  7 bits para mostrar el dígito 2 en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 0 | 1 | 0 | 0 | 1 | 0 |');
gettext('3');
gettext('Constante de  7 bits para mostrar el dígito 3 en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 0 | 0 | 0 | 1 | 1 | 0 |');
gettext('4');
gettext('Constante de  7 bits para mostrar el dígito 4 en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 0 | 0 | 1 | 1 | 0 | 0 |');
gettext('5');
gettext('Constante de  7 bits para mostrar el dígito 5 en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 1 | 0 | 0 | 1 | 0 | 0 |');
gettext('6');
gettext('Constante de  7 bits para mostrar el dígito 6 en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 1 | 0 | 0 | 0 | 0 | 0 |');
gettext('7');
gettext('Constante de  7 bits para mostrar el dígito 7 en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 0 | 0 | 1 | 1 | 1 | 1 |');
gettext('8');
gettext('Constante de  7 bits para mostrar el dígito 8 en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 0 |  0| 0 | 0 | 0 | 0 |');
gettext('9');
gettext('Constante de  7 bits para mostrar el dígito 9 en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 0 |  0| 0 | 1 | 0 | 0 |');
gettext('A');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal A en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 0 |  0| 1 | 0 | 0 | 0 |');
gettext('B');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal B en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  0| 0 | 0 | 0 | 0 |');
gettext('C');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal C en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 1 |  1| 0 | 0 | 0 | 1 |');
gettext('D');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal D en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 0 |  0| 0 | 0 | 1 | 0 |');
gettext('E');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal E en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 1 |  1| 0 | 0 | 0 | 0 |');
gettext('F');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal F en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 1 |  1| 1 | 0 | 0 | 0 |');
gettext('G');
gettext('Constante de  7 bits para mostrar la letral G en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 0 | 0 | 0 | 1 | 0 | 0 |');
gettext('H');
gettext('Constante de  7 bits para mostrar la letra H en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 0 | 0 | 1 | 0 | 0 | 0 |');
gettext('I');
gettext('Constante de  7 bits para mostrar la letra I en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 | 1 | 1 | 0 | 0 | 1 |');
gettext('J');
gettext('Constante de  7 bits para mostrar la letra J en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 0 | 0 | 0 | 0 | 1 | 1 |');
gettext('L');
gettext('Constante de  7 bits para mostrar la letra L en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 1 | 1 | 0 | 0 | 0 | 1 |');
gettext('N');
gettext('Constante de  7 bits para mostrar la letra N en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 1 | 0 | 1 | 0 | 1 | 0 |');
gettext('NN');
gettext('Constante de  7 bits para mostrar la letra ñ en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 1 | 0 | 1 | 0 | 1 | 0 |');
gettext('O');
gettext('Constante de  7 bits para mostrar la letra O en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 0 | 0 | 0 | 0 | 0 | 1 |');
gettext('P');
gettext('Constante de  7 bits para mostrar la letra P en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 0 | 1 | 1 | 0 | 0 | 0 |');
gettext('Q');
gettext('Constante de  7 bits para mostrar la letra Q en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 0 | 0 | 1 | 1 | 0 | 0 |');
gettext('R');
gettext('Constante de  7 bits para mostrar la letra R en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 1 | 1 | 1 | 0 | 1 | 0 |');
gettext('S');
gettext('Constante de  7 bits para mostrar la letra S en un display de 7 segmentos. Ánodo común');
gettext('U');
gettext('Constante de  7 bits para mostrar la letra U en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 0 | 0 | 0 | 0 | 0 | 1 |');
gettext('Y');
gettext('Constante de  7 bits para mostrar la letra Y en un display de 7 segmentos. Ánodo común');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 0 | 0 | 0 | 1 | 0 | 0 |');
gettext('Digitos');
gettext('Letras');
gettext('0');
gettext('Constante de  7 bits para mostrar el dígito 0 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 1 | 1 | 1 | 0 |');
gettext('1');
gettext('Constante de  7 bits para mostrar el dígito 1 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 0 | 0 | 0 | 0 |');
gettext('2');
gettext('Constante de  7 bits para mostrar el dígito 2 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  0| 1 | 1 | 0 | 1 |');
gettext('3');
gettext('Constante de  7 bits para mostrar el dígito 3 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 1 | 0 | 0 | 1 |');
gettext('4');
gettext('Constante de  7 bits para mostrar el dígito 4 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 0 | 0 | 1 | 1 |');
gettext('5');
gettext('Constante de  7 bits para mostrar el dígito 5 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 0 |  1| 1 | 0 | 1 | 1 |');
gettext('6');
gettext('Constante de  7 bits para mostrar el dígito 6 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 0 |  1| 1 | 1 | 1 | 1 |');
gettext('7');
gettext('Constante de  7 bits para mostrar el dígito 7 en un display de 7 segmentos');
gettext('8');
gettext('Constante de  7 bits para mostrar el dígito 8 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 1 | 1 | 1 | 1 |');
gettext('9');
gettext('Constante de  7 bits para mostrar el dígito 9 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 1 | 0 | 1 | 1 |');
gettext('A');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal A en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 0 | 1 | 1 | 1 |');
gettext('B');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal B en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 0 |  1| 1 | 1 | 1 | 1 |');
gettext('C');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal C en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 0 |  0| 1 | 1 | 1 | 0 |');
gettext('D');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal D en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 1 |  1| 1 | 1 | 0 | 1 |');
gettext('E');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal E en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 0 |  0| 1 | 1 | 1 | 1 |');
gettext('F');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal F en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 0 |  0| 0 | 1 | 1 | 1 |');
gettext('G');
gettext('Constante de  7 bits para mostrar la letral G en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 | 1 | 1 | 0 | 1 | 1 |');
gettext('H');
gettext('Constante de  7 bits para mostrar la letra H en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 1 | 1 | 0 | 1 | 1 | 1 |');
gettext('I');
gettext('Constante de  7 bits para mostrar la letra I en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 0 | 0 | 0 | 1 | 1 | 0 |');
gettext('J');
gettext('Constante de  7 bits para mostrar la letra J en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 1 | 1 | 1 | 1 | 0 | 0 |');
gettext('L');
gettext('Constante de  7 bits para mostrar la letra L en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 0 | 0 | 1 | 1 | 1 | 0 |');
gettext('N');
gettext('Constante de  7 bits para mostrar la letra N en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 0 | 1 | 0 | 1 | 0 | 1 |');
gettext('NN');
gettext('Constante de  7 bits para mostrar la letra ñ en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 0 | 1 | 0 | 1 | 0 | 1 |');
gettext('O');
gettext('Constante de  7 bits para mostrar la letra O en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 1 | 1 | 1 | 1 | 1 | 0 |');
gettext('P');
gettext('Constante de  7 bits para mostrar la letra P en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 1 | 0 | 0 | 1 | 1 | 1 |');
gettext('Q');
gettext('Constante de  7 bits para mostrar la letra Q en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 1 | 1 | 0 | 0 | 1 | 1 |');
gettext('R');
gettext('Constante de  7 bits para mostrar la letra R en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 0 | 0 | 0 | 1 | 0 | 1 |');
gettext('S');
gettext('Constante de  7 bits para mostrar la letra S en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 0 | 1 | 1 | 0 | 1 | 1 |');
gettext('U');
gettext('Constante de  7 bits para mostrar la letra U en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 1 | 1 | 1 | 1 | 1 | 0 |');
gettext('Y');
gettext('Constante de  7 bits para mostrar la letra Y en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 1 | 1 | 1 | 0 | 1 | 1 |');
gettext('0');
gettext('1');
gettext('2');
gettext('3');
gettext('4');
gettext('5');
gettext('6');
gettext('7');
gettext('8');
gettext('9');
gettext('A');
gettext('B');
gettext('C');
gettext('D');
gettext('E');
gettext('F');
gettext('G');
gettext('H');
gettext('I');
gettext('J');
gettext('L');
gettext('N');
gettext('NN');
gettext('O');
gettext('P');
gettext('Q');
gettext('R');
gettext('S');
gettext('U');
gettext('Y');
gettext('0');
gettext('Un bit constante a 0');
gettext('1');
gettext('Un bit constante a 1');
gettext('01_bits');
gettext('02_bits');
gettext('03_bits');
gettext('04_bits');
gettext('05_bits');
gettext('07_bits');
gettext('08_bits');
gettext('10_bits');
gettext('16_bits');
gettext('Generico');
gettext('Valor genérico constante, de 1 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Generico');
gettext('Valor genérico constante, de 2 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Valor_0');
gettext('Valor constante 0 para bus de 2 bits');
gettext('Valor_1');
gettext('Valor constante 1 para bus de 2 bits');
gettext('Valor_2');
gettext('Valor constante 2 para bus de 2 bits');
gettext('Valor_3');
gettext('Valor constante 3 para bus de 2 bits');
gettext('Generico');
gettext('Valor genérico constante, de 3 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Generico');
gettext('Valor genérico constante, de 4 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Valor_00');
gettext('Valor constante 0 para bus de 4 bits');
gettext('Valor_05');
gettext('Valor constante 5 para bus de 4 bits');
gettext('Valor_10');
gettext('Valor constante 10 para bus de 4 bits');
gettext('Valor_15');
gettext('Valor constante 15 para bus de 4 bits');
gettext('Generico');
gettext('Valor genérico constante, de 5 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Generico');
gettext('ASCII');
gettext('Generico');
gettext('Valor genérico constante, de 8 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Valor_000');
gettext('Valor constante 0 para bus de 8 bits');
gettext('Valor_085');
gettext('Valor constante 85 (55h) para bus de 8 bits');
gettext('Valor_170');
gettext('Valor constante 170 (AAh) para bus de 8 bits');
gettext('Valor_255');
gettext('Valor constante 255 para bus de 8 bits');
gettext('Char-A');
gettext('Código ASCII del carácter A');
gettext('Char-J');
gettext('Código ASCII del carácter J');
gettext('Char-L');
gettext('Código ASCII del carácter L');
gettext('Char-LF');
gettext('Código ASCII del carácter LF');
gettext('Generico');
gettext('Valor genérico constante, de 10 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Generico');
gettext('Valor genérico constante, de 16 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('ADC');
gettext('Accesorios');
gettext('Aritmetica');
gettext('Biestables');
gettext('Bombeo');
gettext('Bus');
gettext('Comparadores');
gettext('Contadores');
gettext('Flancos');
gettext('IR');
gettext('Input');
gettext('Motor');
gettext('PWM');
gettext('Pegatinas');
gettext('Prescaler');
gettext('Pulsador');
gettext('Recreo');
gettext('Registros');
gettext('Retardo');
gettext('Serial');
gettext('Servos');
gettext('Timers');
gettext('VGA');
gettext('icebot');
gettext('adc');
gettext('Analog-to-digital-converter');
gettext('Registro de 8 bits');
gettext('Biestable con entradas de Set y Reset síncronas, para poner y quitar notaficaciones de eventos');
gettext('Detector de flanco de subida. Emite un tic cuando detecta un flanco ascendente');
gettext('Circuito combinacional de 3 entradas y 18 salidas');
gettext('Contador módulo M, ascendente, de 3 bits, con reset ');
gettext('Biestable de datos (Tipo D). Cuando se recibe un tic por load se captura el dato');
gettext('Controlador i2c que permite 3 transacciones: escritura, lectura y selección');
gettext('Tri-state logic block');
gettext('Generar la condición de start en el bus I2C');
gettext('Temporizador en microsegundos. La señal p está activa durante el tiempo indicado. Por tic se emite un tic al finalizar');
gettext('Detector de flanco de bajada. Emite un tic cuando detecta un flanco descendente');
gettext('Detección de los ACKs del esclavo. Si no se recibe, se activa la salida NAK');
gettext('Separador de bus de 2-bits en dos cables');
gettext('Registro de desplazamiento (izquierda) de 8 bits');
gettext('Gestion de la entrada/salida en el bus i2c');
gettext('Contador módulo M, ascendente, de 8 bits, con reset ');
gettext('Generar una condición de parada en el bus i2c');
gettext('Inyectar un byte en el bus i2c');
gettext('Corazón  finito de tics. Emitir num tics cuando se recibe un tic de start');
gettext('Corazón de bombeo de tics, cuyo periodo está especificado en tics también');
gettext('Contador módulo M, ascendente, de 5 bits, con reset ');
gettext('Máquina para hacer repeticiones');
gettext('Contador módulo M, ascendente, de 2 bits, con reset ');
gettext('Comparador de igualdad, de un operando de 3 bits');
gettext('**SDA**\n(INOUT)  ');
gettext('Decoddificador');
gettext('**Parámetro**: Módulo del contador');
gettext('Configuracion pin inout:  \n1: Salida  \n0: Entrada');
gettext('Señal para lectura  \n(W=1)');
gettext('Señal para escritura  \n(W=0)');
gettext('**I2C: Condicion de start**\n\nSDA y SCL están inicialmente en reposo (1). Al llegar un  \ntic por start, se genera la condición de start, que consiste  \nen poner SDA a 0 y trancurrido un tiempo T1, el reloj SCL  \ntambién se pone a 0');
gettext('**Estado de SDA**  \n(datos)   \nInicialmente a 1');
gettext('**Línea de datos**');
gettext('La señal SCL está  \nretrasada T1 con  \nrespecto a SDA');
gettext('Detectar cuando SDA  \nha bajado a 0');
gettext('**Estado de SCL** (Reloj)    \nInicialmente a 1');
gettext('Al activarse start, SDA  \nbaja a 0');
gettext('Volver al estado de  \nreposo (SDA=1, SCL=1)');
gettext('Emitir un tic para indicar  \nque la condición de estar  \nse ha ejecutado');
gettext('**Arranque del**  \n**temporizador**');
gettext('**Salida de pulso**');
gettext('**Salida de tic**');
gettext('**Parametro del timer**  \nmicroseundos a esperar');
gettext('rs bit  \n(receive/send)  \n0: receive  \n1: send  ');
gettext('Receive-send bit');
gettext('ack window  \nThis output is 1 only  \nwhen the 9th bit is being  \nsent');
gettext('Generar una condición de Stop en el Bus I2C  \nCuando está en reposo, las entradas sda y scl atraviesan el  \nbloque sin modificación. Cuando se activa start, comienza la  \ngeneración de la condición de parada, y SCL se pone a 1.  \nTranscurrido un tiempo T2, SDA se pone a 1 también  \nSe señalliza en done que se ha completado');
gettext('Espera previa al stop');
gettext('121 tics son 10us');
gettext('Arrancar el módulo  \nde gestión del pin io');
gettext('CircuitScramble');
gettext('Baliza-1');
gettext('Baliza luminosa de 1 led. Parpadea a 2Hz cuando se activa');
gettext('Bombear 2 bits por segundo');
gettext('Corazon genérico para bombear bits a la frecuencia fijada en Hz (por defecto 1Hz)');
gettext('**Baliza luminosa**\n\nParpadeo del LED a 2Hz');
gettext('Creado a partir de un **corazón  \ngenérico**, dando el valor adecuado  \na su parámetro frecuencia');
gettext('Baliza-2');
gettext('Baliza luminosa de 2 leds. Parpadean alternativamente a 2Hz cuando se activa');
gettext('**Baliza luminosa**\n\nParpadeo de los LEDs alternativamente a 2Hz, cuando están habilitados ');
gettext('Beep');
gettext('Emitir un pitido de duración (ms) y frecuencia (hz) indicada en los parámetros, al recibir un tic');
gettext('Temporizador en milisegundos. La señal p está activa durante el tiempo indicado. Por tic se emite un tic al finalizar');
gettext('**Parametro del timer**  \nmilisegundos a esperar');
gettext('Init-tic');
gettext('Emitir un tic inicial al arrancar, y nunca más');
gettext('KITT');
gettext('Secuencia del coche fantástico, con entrada de enable');
gettext('Corazón de bombeo de tics con periodo paramétrico de milisegundos y entrada de enable');
gettext('Contador módulo M, ascendente, de 4 bits, con reset ');
gettext('Sirena');
gettext('Cuando se activa su entrada (por nivel) suena la sirena');
gettext('Bombear 1000 bits por segundo');
gettext('Bombear 4 bits por segundo');
gettext('Bombear 2000 bits por segundo');
gettext('**Sirena acústica**\n\nSe alternan pitidos de 1Khz y 2Khz a la frecuencia de 4Hz');
gettext('Cuando esta señal se pone a 1  \nempieza a sonar la sirena');
gettext('Conectar la salida  \ndirectamente a un  \nzumbador');
gettext('beep-flash');
gettext('Emitir un flash en el LED y un pitido en el zumbador al recibir el tic');
gettext('Emitir un pulso de anchura determinada para encender un LED durante un tiempo. 50ms por defecto');
gettext('flash');
gettext('Button-off');
gettext('Pulsador de cambio con icono de Circuit Scramble. Cada vez que se aprieta cambia de estado');
gettext('Valor inicial del pulsador\n');
gettext('and');
gettext('Sumadores');
gettext('03-bits');
gettext('04-bits');
gettext('08-bits');
gettext('09-bits');
gettext('sum-1op');
gettext('Sumador de un operando de 3 bits con una constante pasada como parámetro (No hay accarreo)');
gettext('sum-1op');
gettext('Sumador de un operando de 4 bits con una constante pasada como parámetro (No hay accarreo)');
gettext('sum-1op');
gettext('Sumador de un operando de 8 bits con una constante pasada como parámetro (No hay accarreo)');
gettext('sum-1op');
gettext('Sumador de un operando de 9 bits con una constante pasada como parámetro (No hay accarreo)');
gettext('D-Flip-flops');
gettext('T-Flip-flops');
gettext('system');
gettext('Cambio');
gettext('Biestable de cambio (Tipo T). Cuando se recibe un tic cambia de estado');
gettext('Dato');
gettext('Set-Reset');
gettext('D-rst-load');
gettext('T');
gettext('T-Flip-Flop with reset. It toggles when the T input is 1');
gettext('Dato');
gettext('Fijos');
gettext('Tics');
gettext('Corazon_Hz');
gettext('Corazon_Seg');
gettext('Bombear 1 bit con el periodo especificado en el parámetro. Por defecto el periodo es de 1 segundos');
gettext('Corazon_10Hz');
gettext('Bombear 10 bits por segundo');
gettext('Corazon_1Hz');
gettext('Bombear 1 bit por segundo');
gettext('Corazon_1KHz');
gettext('Corazon_2Hz');
gettext('Corazon_2KHz');
gettext('Corazon_3Hz');
gettext('Bombear 3 bits por segundo');
gettext('Corazon_4Hz');
gettext('Corazon_5Hz');
gettext('Bombear 5 bits por segundo');
gettext('Corazon_7Hz');
gettext('Bombear 7 bits por segundo');
gettext('Corazon_DO4');
gettext('Bombear bits a la frecuencia del DO de la cuarta octava');
gettext('Corazon_MI4');
gettext('Bombear bits a la frecuencia del MI de la cuarta octava');
gettext('Corazon_RE4');
gettext('Bombear bits a la frecuencia del RE de la cuarta octava');
gettext('Fijos');
gettext('Heart-Hz');
gettext('Corazón de bombeo de tics a un frecuencia parametrica en Hz');
gettext('Heart-Sec-ena');
gettext('Corazón de bombeo de tics con periodo paramétrico de segundos y entrada de enable');
gettext('Heart-Sec');
gettext('Corazón de bombeo de tics a con periodo paramétrico de segundos');
gettext('Heart-baud-rx');
gettext('Corazon de tics para generar velocidades de recepción serie en baudios. La velocidad por defecto es 115200');
gettext('Heart-baud');
gettext('Corazón de tics para generar las velocidades de transmisión serie en baudios (Por defecto emite tics a 11500 baudios)');
gettext('Heart-ms-ena');
gettext('Heart-ms');
gettext('Corazón de bombeo de tics a con periodo paramétrico de milisegundos');
gettext('Heart-tics-ena');
gettext('Heart-tics-num');
gettext('Heart-tics');
gettext('Heart-us-ena');
gettext('Corazón de bombeo de tics, cuyo periodo está especificado en micro-segundos. Solo se hace el bombeo cuando está habilitado');
gettext('Heart-us');
gettext('Corazón de bombeo de tics a con periodo paramétrico de microsegundos');
gettext('heart-N-tics');
gettext('Emits a train of N unitary pulses (tics) when started. A tic is outputed at done when finished');
gettext('**State Flip-flop**  \n0: Idle  \n1: Working...');
gettext('**System clock**');
gettext('The busy output is the  \nstate flip-flop');
gettext('This machine ends when the  \nstate flip-flops goes from  \n1 to 0');
gettext('**Parameter**: Number of  \ntics to emit');
gettext('Generate a train of \"tics\"  when  \nthe machine is on');
gettext('Count the number of  \ntics generated');
gettext('The number of tics requested   \nhave been produced');
gettext('Stop generating  \ntics right now');
gettext('Turn off the machine');
gettext('**Output**  ');
gettext('Heart-1Hz');
gettext('Corazón de bombeo de tics a la frecuencia de 1Hz');
gettext('02_bits');
gettext('03_bits');
gettext('04_bits');
gettext('08_bits');
gettext('09_bits');
gettext('10_bits');
gettext('16_bits');
gettext('17_bits');
gettext('Agregador');
gettext('Agregador de 2 cables en un bus de 2-bits');
gettext('Separador');
gettext('Acoplador-3-8');
gettext('Acoplador de buses de 3 a 8 bits. Se rellena con ceros');
gettext('Agregador');
gettext('Agregador de 3 cables en un bus de 3-bits');
gettext('Separador-1-2');
gettext('Separador de bus de 3-bits, en dos de 1 y 2 bits');
gettext('Separador');
gettext('Separador de bus de 3-bits');
gettext('Agregador');
gettext('Agregador de buses de 2-bits a bus de 4-bits');
gettext('Agregador4');
gettext('Agregador de 4 cables en un bus de 4-bits');
gettext('Separador');
gettext('Separador de bus de 4-bits en buses de 2 bits');
gettext('Separador4');
gettext('Separador de bus de 4-bits en 4 cables');
gettext('Agregador');
gettext('Agregador de 2 buses de 4-bits a bus de 8-bits');
gettext('Extract-bit');
gettext('Extractor de 1 bit de un bus de 8 bits');
gettext('Separador-3-4');
gettext('Separador de bus de 8-bits en 2 buses de 3 y 4 bits');
gettext('Separador');
gettext('Separador de bus de 8-bits en buses de 4 bits');
gettext('Extract-bit');
gettext('Extractor de 1 bit de un bus de 9 bits');
gettext('Join-8-1');
gettext('Agregador de buses de 8 y 2 bits a uno de 9bits');
gettext('split-1-8');
gettext('Separador de bus de 9-bits en uno de 1bit y otro de 8bits');
gettext('Join-8-2');
gettext('Agregador de buses de 8 y 2 bits a uno de 10bits');
gettext('Agregador');
gettext('Agregador de 2 buses de 8-bits a bus de 16-bits');
gettext('Separador');
gettext('Separador de bus de 16-bits en buses de 8 bits');
gettext('Extractor-bus-1bit');
gettext('Extractor de bus de 1bit de uno de 17bits');
gettext('Extractor-bus-2bits');
gettext('Extractor de bus de 2 bits de uno de 17bits');
gettext('Extractor-bus-4bits');
gettext('Extractor de bus de 4 bits de uno de 17bits');
gettext('Extractor-bus-8bits');
gettext('Extractor de bus de 8 bits de uno de 17bits');
gettext('1-bit');
gettext('10-bits');
gettext('2-bits');
gettext('3-bits');
gettext('4-bits');
gettext('8-bits');
gettext('Comp-1');
gettext('Comparador de igualdad, de un operando de 1 bit');
gettext('Comp-2');
gettext('Comparador de dos operandos de 1 bit');
gettext('Menor-1');
gettext('Comparador menor que, de un operando de 1 bit');
gettext('Menor-2');
gettext('Comparador menor que, de dos operandos de 1 bit');
gettext('Comp-1');
gettext('Comparador de un operando de 10 bits. Se compara si el operando es igual al parámetro');
gettext('Less-1');
gettext('Comparador menor que, de un operando de 10 bits');
gettext('Less-eq-1');
gettext('Comparador menor o igual que, de un operando de 10 bits');
gettext('grt-eq-1');
gettext('Comparador mayor o igual que, de un operando de 10 bits');
gettext('Comp-1');
gettext('Comparador de igualdad, de un operando de 2 bits');
gettext('Comp-2');
gettext('Comparador de dos operandos de 2 bits');
gettext('Menor-1');
gettext('Comparador menor que, de un operando de 2 bits');
gettext('Menor-2');
gettext('Comparador menor que, de dos operandos de 2 bits');
gettext('Comp-1');
gettext('Comp-2');
gettext('Comparador de dos operandos de 3 bits');
gettext('Menor-1');
gettext('Comparador menor que, de un operando de 3 bits');
gettext('Menor-2');
gettext('Comparador menor que, de dos operandos de 3 bits');
gettext('Comp-1');
gettext('Comparador de un operando de 4 bits. Se compara si el operando es igual al parámetro');
gettext('Comp-2');
gettext('Comparador de dos operandos de 4 bits');
gettext('Menor-1');
gettext('Comparador menor que, de un operando de 4 bits');
gettext('Menor-2');
gettext('Comparador menor que, de dos operandos de 4 bits');
gettext('Comp-1');
gettext('Comparador de un operando de 8 bits. Se compara si el operando es igual al parámetro');
gettext('Comp-2');
gettext('Comparador de dos operandos de 8 bits');
gettext('Menor-1');
gettext('Comparador menor que, de un operando de 8 bits');
gettext('Menor-2');
gettext('Comparador menor que, de dos operandos de 8 bits');
gettext('02-bits');
gettext('03-bits');
gettext('04-bits');
gettext('05-bits');
gettext('06-bits');
gettext('07-bits');
gettext('08-bits');
gettext('09-bits');
gettext('10-bits');
gettext('11-bits');
gettext('12-bits');
gettext('13-bits');
gettext('17-bits');
gettext('system');
gettext('cont-basic-+1-ini0');
gettext('Contador básico, de 2 bits, inicializado a 0 e incremento de 1');
gettext('**Contador básico**');
gettext('**Valor inicial**');
gettext('**Incremento**');
gettext('cont-basic');
gettext('Contador básico, de 2 bits');
gettext('cont-up-mod-M');
gettext('cont-up-system');
gettext('Contador del sistema, módulo M, ascendente, de 2 bits, con reset ');
gettext('cont-up');
gettext('cont-basic');
gettext('Contador del sistema, de 2 bits');
gettext('blocks');
gettext('system');
gettext('cont-basic');
gettext('Contador básico, de 3 bits');
gettext('cont-up-down');
gettext('Contador ascendente/descendente de 3 bits');
gettext('cont-up-system');
gettext('Contador del sistema, módulo M, ascendente, de 3 bits, con reset ');
gettext('cont-up');
gettext('cont-up-down');
gettext('Registro de 3 bits');
gettext('cont-basic');
gettext('Contador del sistema, de 3 bits');
gettext('system');
gettext('cont-basic-+1-ini0');
gettext('Contador básico, de 4 bits, inicializado a 0 e incremento de 1');
gettext('cont-basic');
gettext('Contador básico, de 4 bits');
gettext('cont-up-down');
gettext('Contador ascendente/descendente de 4 bits');
gettext('cont-up-system');
gettext('Contador del sistema, módulo M, ascendente, de 4 bits, con reset ');
gettext('cont-up');
gettext('cont-basic');
gettext('Contador del sistema, de 4 bits');
gettext('cont-up');
gettext('cont-up-system');
gettext('cont-up');
gettext('Contador módulo M, ascendente, de 6 bits, con reset ');
gettext('cont-up');
gettext('Contador módulo M, ascendente, de 7 bits, con reset ');
gettext('blocks');
gettext('cont-basic');
gettext('Contador básico, de 8 bits');
gettext('cont-up');
gettext('cont-basic');
gettext('cont-up');
gettext('Contador módulo M, ascendente, de 9 bits, con reset ');
gettext('cont-up-system');
gettext('Contador del sistema, módulo M, ascendente, de 10 bits, con reset ');
gettext('cont-up');
gettext('Contador módulo M, ascendente, de 10 bits, con reset ');
gettext('cont-up');
gettext('Contador módulo M, ascendente, de 11 bits, con reset ');
gettext('cont-up');
gettext('Contador módulo M, ascendente, de 12 bits, con reset ');
gettext('cont-up');
gettext('Contador módulo M, ascendente, de 13 bits, con reset ');
gettext('system');
gettext('cont-basic');
gettext('Contador del sistema, de 17 bits');
gettext('blocks');
gettext('Bajada');
gettext('Subida');
gettext('Subida');
gettext('Detector de flanco de subida. Emite un tic cuando detecta un flanco de subida. Versión bloques');
gettext('## Detector de flancos de subida\n\nSe genera un tic cuando llega un flanco de subida por la entrada');
gettext('Señal de  \nentrada');
gettext('Reloj del  \nsistema');
gettext('Señal de entrada  \nactual');
gettext('Estado de la señal  \nen el instante anterior');
gettext('Si señal actual es 1  \nY la señal anterior  \nes 0, es que ha llegado  \nun flanco');
gettext('En el resto de casos  \nla salida siempre es 0');
gettext('**Retraso**: 0  \nEl retraso es cero porque el flanco  \nde subida llega desde la entrada  \na la salida sin pasar por biestables');
gettext('IR-tic-sound');
gettext('Detección de objeto con sensor de infrarrojos (IR). Emite un tic cada vez detecta un objeto, y un sonido');
gettext('Detección de objeto con sensor de infrarrojos (IR). Emite un tic cada vez detecta un objeto');
gettext('**IRr-tic-sound**');
gettext('**IRr-tic**');
gettext('IR-tic');
gettext('Debouncer');
gettext('Remove the rebound on a mechanical switch');
gettext('Tri-state');
gettext('sync');
gettext('Sincronizar las entradas de datos con el reloj del sistema');
gettext('SM-S4303R');
gettext('MotorBit');
gettext('Controlador para servo de rotacion continua SprintRC SM-S4303R. Con on=1, el motor avanza. Dir=1 sentido agujas reloj/ 0 el contrario. V1 y V2 son los pulsos para las velocidades horaria y antihoraria (en micro-sec). V0 para que esté parado');
gettext('Mux 2:1. Bus de 7 bits. ');
gettext('Mux 2:1. Bus de 4 bits. ');
gettext('Agregador de 4 cables a bus de 4bits');
gettext('Separador de bus de 4bits en 4 cables (1 + 1 + 1 + 1)');
gettext('Multiplexor 2:1 de 1-bit');
gettext('NAND logic gate');
gettext('Transistor');
gettext('Transistor cmos hecho a partir de semiconductores');
gettext('Cristal de Siicio');
gettext('Atomos de silicio');
gettext('Separador de bus de 8bits en 2 (4 + 4)');
gettext('Agregador de 2 buses de 4 a bus de 8bits');
gettext('Controlador PWM para posicionar servos de 20ms. Las unidades de pos son de 10usec');
gettext('**Velocidad 1**: Velocidad para el  \nsentido de giro horario\n');
gettext('**Velocidad 2**: Velocidad para el \nsentido de giro antirhorario');
gettext('**Entrada on/off**: Motor en  \nmovimiento o parado');
gettext('**Motorbit paramétrico** para los **SM-S4303R** o compatibles\n\nTiene 3 parámetros, especificados en micro-segundos. **V1** y **V2** son las posiciones (ancho del pulso)  \npara las velocidades de giro en sentido horario y antihorario respectivamente\n\n**V0** es la posición en la que el servo está parado (velocidad 0)\n\nPor defecto se asignan los valores para las velocidades máximas, tanto en sentido horario como antihorario\n\n* V1max = 1900\n* V2max = 1100\n* V0 = 1500');
gettext('**Velocidad en sentido horario**\n\n* Si V1 >= 1900, la velocidad es máxima\n* Si 1900 > V1 > 1500, la velocidad estará  \nentre la máxima y 0');
gettext('**Velocidad en sentido antihorario**\n\n* Si V2 <= 1100, la velocidad es máxima\n* Si 1100 < V2 < 1500, la velocidad estará  \nentre la máxima y 0');
gettext('**dir**: Sentido de giro  \n1: horario / 0: antihorario');
gettext('**Velocidad 0**: Posición para que  \nel servo esté parado');
gettext('Mux 2:1 with logic gates');
gettext('Entrada 1');
gettext('Entrada 0');
gettext('Selección');
gettext('Implementación en Verilog');
gettext('Las puertas están construidas a\npartir de transistores');
gettext('Pincha en algún transistor para\nbajar de nivel');
gettext('Nivel 3: Semiconductores');
gettext('Los transistores se crean a \npartir de uniones entre \nsemiconductores, de tipo P y N\nEstán integrados en los dados de\nsilicio en los circuitos integrados');
gettext('Pincha en el bloque para bajar de nivel');
gettext('Nivel 2: MATERIALES');
gettext('Cristal de silicio');
gettext('Los semiconductores se crean a partir de cristales\nde Silicio (Si) que se dopans con impurezas\npara darle las propiedades de semiconductores');
gettext('Pincha en los bloques para bajar de nivel');
gettext('Átomos de Silicio');
gettext('Nivel 1: ATOMOS');
gettext('Los cristales de silicio se forman a \npartir del enlace covalente entre los\nátomos de silicio. Cada uno de ellos \nestá rodeado por 4 átomos de silicio\nformando un tetraedro');
gettext('<B>Posicion del servo</B>\n\nSe especifica en unidades de 10micro-segundos\nEj. pos = 100 --> Pulso de achura 1ms');
gettext('<B>Generación de una señal PWM para posicionamiento de Servos</B>\nEl periodo es de 20ms\nEl ancho del pulso varía entre 0 - 255 (0 - 2.5ms)');
gettext('02-bits');
gettext('04-bits');
gettext('08-bits');
gettext('pwm');
gettext('Señal pwm de 2 bits (4 niveles)');
gettext('Parámetro: Número de bits para el prescalado  \n0 para no usar prescalado');
gettext('blocks');
gettext('pwm');
gettext('Señal pwm de 4 bits (16 niveles) y frecuencia de 92Hz');
gettext('pwm-92Hz');
gettext('Registro de 4 bits');
gettext('**Contador principal**');
gettext('**PWM**');
gettext('**Comparador**');
gettext('Extraer los 4 bits  \nde mayor peso');
gettext('**Registro W**');
gettext('**Registro buffer**');
gettext('Comienza un ciclo  \nde PWM nuevo');
gettext('Extraer el bit de  \nmayor peso');
gettext('El registro se carga  \nen cada comienzo de  \nciclo del PWM');
gettext('Se almacena el nivel  \nintroducido por el user  \nhasta que llegue el  \ncomienzo de ciclo');
gettext('Registrar la salida  \npara cumplir con las  \nreglas de diseño síncrono');
gettext('blocks');
gettext('pwm-100Hz');
gettext('Unidad de pwm de 8-bits. Frecuencia 100Hz (Real 91.53Hz)');
gettext('**Unidad de PWM**  \n\n* Frecuencia: 91.53 Hz  \n* Resolución: prescaler de 9 bits: 42.67us  \n* Aplicación: Control intensidad en LEDs');
gettext('pwm');
gettext('Señal pwm de 8 bits (256 niveles)');
gettext('pwm-100Hz');
gettext('Unidad de pwm de 8-bit. Frecuenica 100Hz (Real 91.53Hz)');
gettext('Prescaler básico de N bits');
gettext('**Prescaler de 9 bits**');
gettext('**Contador de 8 bits**');
gettext('Señal de ov: el contador  \nvuelve a comenzar desde 0  \n');
gettext('Comienza un nuevo  \nperiodo de PWM');
gettext('Valores desde 0 hasta 255');
gettext('Mientras que CONT < W (Anchura pulso)  \nPWM es 1. Cuando CONT >= w, PWM es 0');
gettext('**Señal PWM**');
gettext('Salida registrada  \n(Para cumplir normas  \ndel diseño síncrono)');
gettext('Registro que contiene la  \nanchura (8 bits) del pulso');
gettext('Almacena el valor de la anchura del pulso  \ninntroducida por el usuario. Se guarda en un  \nregistro temporal hasta que al comenzar el  \nsiguiente ciclo de PWM se carga en el registro W');
gettext('El valor del registro sólo se puede actualizar al  \ncomienzo del periodo de PWM para garantizar que  \nel pulso tiene anchura fija en ese periodo');
gettext('Desde fuera se escribir en este registro  \na la velocidad que se quiera, pero se  \ngarantiza que el registro W sólo se  \nactualiza al comienzo de cada ciclo de PWM');
gettext('Sacar el bit de mayor  \npeso del contador');
gettext('**Prescaler básico**');
gettext('Señal de reloj de salida  \nCiclo de trabajo 50%');
gettext('tic de overflow  \nComienza un nuevo periodo');
gettext('**Parámetro**: Bits del prescaler');
gettext('pwm-92Hz');
gettext('Señal pwm de 8 bits (256 niveles) y frecuencia de 92Hz');
gettext('Extraer los 8 bits  \nde mayor peso');
gettext('Academia-Jedi');
gettext('Emojis');
gettext('Jedi-collection');
gettext('Sticker con el logo de la Jedi Collection');
gettext('[Jedi Collection](https://github.com/FPGAwars/Collection-Jedi)  \n\n![](https://github.com/Obijuan/digital-electronics-with-open-FPGAs-tutorial/raw/master/wiki/Tutorial-31/jedi-collection-01.png)');
gettext('00-Pre');
gettext('01-Primero');
gettext('02-Segundo');
gettext('03-Tercero');
gettext('22-Caballero-Jedi');
gettext('Rango de Caballero Jedi. Tutorial I completado con máximos honores');
gettext('00-Observador');
gettext('Rango de Observador. Pre-academia Jedi');
gettext('01-Aspirante-a-Cadete');
gettext('Rango de Aspirante a Cadete. Pre-academia Jedi');
gettext('02-Cadete');
gettext('Rango de Cadete. Primer curso');
gettext('03-Cadete-N1');
gettext('Rango de Cadete Nivel 1. Primer curso');
gettext('04-Cadete-N2');
gettext('Rango de Cadete Nivel 2. Primer curso');
gettext('05-Cadete-N3');
gettext('Rango de Cadete Nivel 3. Primer curso');
gettext('06-Aspirante-Padawan');
gettext('Rango de Aspirante a Padawan. Primer curso');
gettext('07-Aspirante-Padawan-N1');
gettext('Rango de Aspirante a Padawan Nivel 1. Primer curso');
gettext('08-Aspirante-Padawan-N2');
gettext('Rango de Aspirante a Padawan Nivel 2. Primer curso');
gettext('09-Aspirante-Padawan-N3');
gettext('Rango de Aspirante a Padawan Nivel 3. Primer curso');
gettext('10-Padawan');
gettext('Rango de Padawan. Segundo curso');
gettext('11-Padawan-N1');
gettext('Rango de Padawan Nivel 1. Segundo curso');
gettext('12-Padawan-N2');
gettext('Rango de Padawan Nivel 2. Segundo curso');
gettext('13-Padawan-N3');
gettext('Rango de Padawan Nivel 3. Segundo curso');
gettext('14-Aspirante-Jedi');
gettext('Rango de Aspirante a Jedi. Segundo curso');
gettext('15-Aspirante-Jedi-N1');
gettext('Rango de Aspirante a Jedi Nivel 1. Segundo curso');
gettext('16-Aspirante-Jedi-N2');
gettext('Rango de Aspirante a Jedi Nivel 2. Segundo curso');
gettext('17-Aspirante-Jedi-N3');
gettext('Rango de Aspirante a Jedi Nivel 3. Segundo curso');
gettext('18-Jedi');
gettext('Rango de Jedi. Tercer curso');
gettext('19-Jedi-N1');
gettext('Rango de Jedi Nivel 1. Tercer curso');
gettext('20-Jedi-N2');
gettext('Rango de Jedi Nivel 2. Tercer curso');
gettext('21-Jedi-N3');
gettext('Rango de Jedi Nivel 3. Tercer curso');
gettext('Smiley');
gettext('Stickers de Smiley');
gettext('caca');
gettext('Caca sonriente');
gettext('like');
gettext('Like');
gettext('blocks');
gettext('pres-basic');
gettext('09-bits');
gettext('pres-basic');
gettext('Prescaler básico de 9 bits, implementado con bloques');
gettext('Registro del sistema de 9 bits');
gettext('Extrar el bit de  \nmayor peso');
gettext('Registro que almacena  \nla cuenta actual (CONT)');
gettext('Incrementar la cuenta');
gettext('CONT = CONT + 1  \nSe actualiza en el  \nsiguiente tic del sistema');
gettext('pulsador-cambio');
gettext('Pulsador de cambio. Cada vez que se aprieta cambia de estado');
gettext('pulsador-tic-sound');
gettext('Pulsador de tics con sonido');
gettext('Detección de pulsación. Emite un tic cada vez que se aprieta el pulsador');
gettext('**Pulsador-tic**');
gettext('pulsador-tic');
gettext('comecocos');
gettext('Bloque de prueba para explicar conceptos. No hace nada');
gettext('Bloque de documentación, para explicar los  \nconceptos de puertos, parámeros, pines, cables  \ny buses en el tutorial 21');
gettext('02-bits');
gettext('03-bits');
gettext('04-bits');
gettext('05-bits');
gettext('06-bits');
gettext('07-bits');
gettext('08-bits');
gettext('09-bits');
gettext('10-bits');
gettext('01-bit');
gettext('Registro de desplazamiento (izquierda) de 2 bits');
gettext('reg');
gettext('Registro de 2 bits');
gettext('sreg-load');
gettext('reg');
gettext('sreg-load');
gettext('Registro de desplazamiento (izquierda) de 3 bits');
gettext('reg');
gettext('sreg-load');
gettext('Registro de desplazamiento (izquierda) de 4 bits');
gettext('reg');
gettext('Registro de 5 bits');
gettext('sreg-load');
gettext('Registro de desplazamiento (izquierda) de 5 bits');
gettext('reg');
gettext('Registro de 6 bits');
gettext('sreg-load');
gettext('Registro de desplazamiento (izquierda) de 6 bits');
gettext('reg');
gettext('Registro de 7 bits');
gettext('sreg-load');
gettext('Registro de desplazamiento (izquierda) de 7 bits');
gettext('sreg-rst');
gettext('Registro de desplazamiento (izquierda) de 7 bits, con reset');
gettext('sreg');
gettext('reg-rst');
gettext('Registro de 8 bits con reset');
gettext('reg-system');
gettext('Registro del sistema de 8 bits');
gettext('reg');
gettext('sreg-load');
gettext('sreg-r-load');
gettext('Registro de desplazamiento (derecha) de 8 bits');
gettext('sreg-rst');
gettext('8-bit shift register with reset');
gettext('sreg');
gettext('reg-system');
gettext('sreg-r-load');
gettext('Registro de desplazamiento (derecha) de 9 bits');
gettext('sreg-load');
gettext('Registro de desplazamiento (izquierda) de 10 bits');
gettext('sreg-r-load');
gettext('Registro de desplazamiento (derecha) de 10 bits');
gettext('Tortuga-2');
gettext('Divisor entre dos');
gettext('Biestable T síncrono, inicializado a 0');
gettext('Biestable T síncrono, inicializado por parametro INI');
gettext('Biestable tipo D con entrada de enable, inicializado al parámetro INI');
gettext('Biestable D con inicialización paramétrica');
gettext('Generar un pulso de reloj al recibir un flanco por la entrada');
gettext('Biestable D inicializado a 0');
gettext('Delay flip-flop');
gettext('Tortuga: Divisor entre 2\n\nImplementado a partir de un\nbiestable T síncrono');
gettext('Hacer que solo responda a los flancos\nde subida de la señal de entrada');
gettext('blocks');
gettext('Serial-rx');
gettext('Receptor serie asíncrono. Velocidad por defecto: 115200 baudios');
gettext('Serial-tx');
gettext('Transmisor serie');
gettext('Serial-tx16');
gettext('Transmisor serie de 16 bits');
gettext('## Transmisor de 16 bits\n\nTransmitir un dato de 16 bits por el puerto serie. Primero el byte de mayor peso, y luego el menor  \n');
gettext('**Tic de star**');
gettext('**done**  \n(tic de fin)');
gettext('**BAUDIOS**');
gettext('**Dato**');
gettext('serial-tx-str');
gettext('Envío de una cadena por puerto serie');
gettext('**Transmisor**');
gettext('Serial-tx');
gettext('Transmisor serie (hecho a partir de bloques)');
gettext('Un simple cable pasivo, para organizar las conexiones complicadas');
gettext('Biestable De del sistema que hay que  \nañadir para cumplir las reglas de diseño  \nsíncrono: toda señal sacada al exterior,  \nespecialmente si es un cable de comunicaciones  \nasíncronas, debe pasar por un biestable');
gettext('Este Biestable desde  \nestar inicialmente  \na 1, ya que es el  \nvalor de reposo de la  \nlínea serie');
gettext('**Registro de**\n**Desplazamiento**');
gettext('Conversión de los datos serie a  \nparalelo, mediante un registro  \nde 9 bits. Inicialmente tiene todos  \nsus bits a 1, porque la línea está  \nen reposo');
gettext('**Biestable D**');
gettext('Evento: Comienzo de \ntransmisión');
gettext('Cargar el registro con  \nel dato a enviar en el  \narranque (0 -> 1)');
gettext('**Biestable RS**  \nEstado del transmisor');
gettext('0: Parado. Sin transmitir  \n1: Ocupado. Transmitiendo dato');
gettext('**Generador de**\n**Baudios**');
gettext('Contador de bits  \ntransmitidos');
gettext('El registro de desplazamiento  \nes de 9 bits, para almacenar  \nlos 8 bits de datos y  \nel bit de comienzo (start)');
gettext('Evento: Ultimo  \nbit enviado');
gettext('Al enviarse el último  \nbit, se cambia el estado  \na parado (reset)');
gettext('**Cable pasivo**  \nPara organizar el  \ncableado del reloj');
gettext('**Dato a transmitir**');
gettext('**Bit de Stop**');
gettext('**Bit de start**');
gettext('**Tic de transmisión**  \n¡Que comience la  \ntransmisión!');
gettext('**Línea serie**');
gettext('**Tic de terminación (done)**');
gettext('**Reloj del sistema**');
gettext('**BAUDIOS**\n');
gettext('El tic de terminación está un  \nperiodo de reloj retrasado para  \nque el transmisor pase al estado  \nParado, y que todo se reinicie  \nantes de que se pueda volve a  \nenviar el siguiente caracter');
gettext('El estado del transmisor  \nse saca por la señal  \nbusy');
gettext('Arrancar el generar de baudios  \nal activarse el transmisor');
gettext('Serial-tx16');
gettext('**Estado del transmisor**  \n0: Apagado  \n1: Funcionando');
gettext('Transmistor activado');
gettext('Generar tic  \ninicial');
gettext('**Biestable de**  \n**cambio**');
gettext('Indica qué byte  \nse envía');
gettext('Solo se deja pasar  \nel tic si el transmisor  \nestá habilitado');
gettext('Tic de transmisión');
gettext('Mux de selección  \ndel dato a enviar:  \nel de mayor peso o  \nel de menor');
gettext('**Dato de mayor peso**  \nSe envía el primero\n');
gettext('**Dato de menor peso**  \nSe envía el segundo');
gettext('Tic de siguiente carácter');
gettext('Se ha enviado el byte 2  \nTerminar: apagar el transmisor');
gettext('Al pasar de 0 a 1 es cuando  \nhemos enviado el segundo  \nbyte');
gettext('Enviar dato  \nde 16 bits');
gettext('serial-rx');
gettext('Receptor serie asíncrono. Implementación en bloques');
gettext('Bits series entrantes');
gettext('**Cable**  \nUn simple ccable, para  \norganizar mejor las  \nconexiones del reloj  ');
gettext('**Condición de arranque:**  \nLlega el bit de start  \nque es 0. Detectamos  \nel flanco de bajada');
gettext('**Estado receptor**  \n');
gettext('0: Esperando (apagado)  \n1: Recibiendo dato  ');
gettext('La recepción solo se habilita  \ncuando el receptor está  \nencendido');
gettext('**Generador de baudios**\nSe generan los tics  \npara leer los bits serie  \nque van llegando, a la  \nvelocidad configurada');
gettext('Cuando receptor apagado  \nel contador se deja en 0  ');
gettext('Evento:  \nleer un bit');
gettext('**Registro de desplazamiento**  \nRecibe los 8 bits del dato más  \nel bit de stop final en serie  \ny los saca en paralelo');
gettext('**Conntador de bits recibidos**  \nUna vez que llega el bit de start,  \nque es el que lo inicia todo,  se  \nespera recibir 8 bits de datos +  \nel bit de stop final: 9 bits ');
gettext('Bits a recibir');
gettext('Evento: se han recibido  \nlos 9 bits: FIN');
gettext('**Registro de datos**  \nContiene el dato final  \nrecibido, de 8 bits');
gettext('Capturar el dato  \nfinal');
gettext('Retrar el tic de dato  \nrecibido un periodo,  \npara que la señal de  \nbusy se ponga a 0');
gettext('**Tic de dato recibido**  \nNos indica que ha llegado  \nel dato y lo podemos leer');
gettext('**Dato recibido**');
gettext('**Línea serie**  \nPor aquí llegan los  \ndatos en serie');
gettext('Sincronizador: evitar los  \nproblemas de metaestabilidad');
gettext('Hemos terminado  \nApagar el receptor  \n(volver al estado inicial)');
gettext('serial-tx-srt32');
gettext('Envío de una cadena por puerto serie (max 32 caracteres)');
gettext('Seleccionar siguiente  \nbyte a enviar');
gettext('Tamaño de la  \ncadena');
gettext('Apuntar al siguiente  \ncaracter a enviar');
gettext('Condición de terminación  \nSe ha enviado el último carácter');
gettext('Meter la cadena a enviar,  \nen ASCII hexadecimal');
gettext('Emax-ES08A');
gettext('Futaba-3003');
gettext('TowerPro-SG90');
gettext('blocks');
gettext('ServoPWM-8bits');
gettext('Controlador de servos, de 8 bits. El periodo del PWM por defecto es de 20ms (Futaba 3003)');
gettext('**Salida PWM**');
gettext('Conectar directamente  \nal servo');
gettext('Posición del servo. Indica el  \nancho del pulso en unidades de  \n10 usec. Así, un valor de 60  \nindica una anchura de 600 usec');
gettext('Tic de escritura de  \nuna nueva posición');
gettext('Habilitación del servo');
gettext('ServoBit-90');
gettext('ServoBit para microservos EMAX ES08A. Controlador de 1 bit para mover el servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('ServoBit para microservos EMAX ES08A. Controlador de 1 bit para mover el servo a las 2 posiciones POS0 y POS1');
gettext('**Posición 1**: Posición del servo cuando  \nse introduce un 1\n\nEl valor por defecto es de 135 grados\n');
gettext('**Posición 0**: Posición del servo cuando  \nse introduce un 0\n\nEl valor por defecto es de 45 grados');
gettext('**Entrada**: posición a donde llevar  \nel servo (posición 0 ó 1)');
gettext('**Servobit paramétrico** para los microservos **EMAX-ES08A** o compatibles\n\nLos parámetros **P1** y **P0** son las posiciones asociadas a un valor de la entrada de 1 ó 0  \nEstán expresados en **micro-segundos** (usec). Este tiempo es el ancho del pulso\n\nSus **valores** deben estar comprendidos en este rango: \n\n* Extremo derecho: **580 usec**  \n* Extremo izquierdo **2550 usec**\n');
gettext('ServoBit');
gettext('Servobit-90');
gettext('ServoBit para Futaba 3003. Controlador de 1 bit para mover un servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('ServoBit paramétrico para Futaba 3003. Controlador de 1 bit para mover el servo a las 2 posiciones P0 y P1');
gettext('**Servobit** para Servos Futaba 3003 o comaptibles\nLas dos posiciones están distanciadas **90 grados**  \n\n* **Posicion 0**: 45 grados  \n* **Posicion 1**: 135 grados  ');
gettext('**Servobit paramétrico** para los microservos **Futaba 3003** o compatibles\n\nLos parámetros **P1** y **P0** son las posiciones asociadas a un valor de la entrada de 1 ó 0  \nEstán expresados en **micro-segundos** (usec). Este tiempo es el ancho del pulso\n\nSus **valores** deben estar comprendidos en este rango: \n\n* Extremo derecho: **380 usec**  \n* Extremo izquierdo **2410 usec**\n');
gettext('Servobit');
gettext('Servobit-90');
gettext('ServoBit para micrservo TowerPro-SG90. Controlador de 1 bit para mover un servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('**Servobit paramétrico** para los microservos **TowerPro SG-90** o compatibles\n\nLos parámetros **P1** y **P0** son las posiciones asociadas a un valor de la entrada de 1 ó 0  \nEstán expresados en **micro-segundos** (usec). Este tiempo es el ancho del pulso\n\nSus **valores** deben estar comprendidos en este rango: \n\n* Extremo derecho: **500 usec**  \n* Extremo izquierdo **2350 usec**\n');
gettext('Servobit');
gettext('ServoPWM-8bits');
gettext('Temporizador en unidades de 10 usec');
gettext('Temporizador  \nTiempo en unidades  \nde 10us');
gettext('Genera el ancho del  \npulso según el  \nvalor de delay que  \nindique el usuario');
gettext('**Registro posición**');
gettext('Almacena la posición actual  \ndel servo');
gettext('**Registro de**  \n**estado**');
gettext('0: Servo deshabilitado  \n1: Servo activado');
gettext('**Periodo del PWM**');
gettext('Por cada periodo nuevo se  \ngenera un pulso nuevo, de anchura  \nespecificada por su registro  \nde posición');
gettext('blocks');
gettext('timer-10usec');
gettext('timer-msec');
gettext('timer-sec');
gettext('Temporizador en segundos. La señal p está activa durante el tiempo indicado. Por tic se emite un tic al finalizar');
gettext('**Parametro del timer**  \nSegundos a esperar');
gettext('timer-system');
gettext('Temporizador en tics. La señal p está activa durante los tics indicados. ov se emite un tic al finalizar');
gettext('timer-usec');
gettext('timer-10usec');
gettext('Almacenar el tiempo  \nde espera al arrancar');
gettext('**Registro de**  \n**espera**');
gettext('**Contador de**  \n**tiempo**');
gettext('Cada unidad de tiempo  \nson 10 usecs');
gettext('Contador en reset  \ncuando apagado');
gettext('¿Han transcurrido el tiempo  \nindicado por el registro  \nde espera?');
gettext('Ha transcurrido el tiempo indicado');
gettext('**Biestable**  \n**de estado**');
gettext('0: Apagado  \n1: Funcionando');
gettext('VGA-retro');
gettext('frame');
gettext('Dibujar un marco que cubre toda la zona visible. Muy util para ajustar el monitor');
gettext('Modulo for drawing a frame around the visible zone  \n');
gettext('sync-256x240-60hz');
gettext('Generador de sencuencias refresco horizontales y verticales para monitor VGA. Resolucion 256x240');
gettext('Tamaño de la línea en píxeles.  \nCada pixel es igual a  un tic  \n');
gettext('Comienzo del pulso de  \nsincronismo horizontal  \n');
gettext('Fin del pulso de sincronismo  \nhorizontal  \n');
gettext('**Calculo de parámetros HORIZONTALES**  \nH_MAX = H_DISPLAY + H_BACK + H_FRONT + H_SYNC - 1  \nHS_START = H_DISPLAY + H_FRONT  \nHS_END = H_DISPLAY + H_FRONT + HSYNC -1  ');
gettext('Tamaño vertical  \nen líneas');
gettext('Comienzo del pulso de  \nsincronismo vertical\n');
gettext('Fin del pulso de  \nsincronismo vertical\n');
gettext('**Calculo de parámetros VERTICALES**  \nV_MAX = V_DISPLAY + V_BOTTOM + V_TOP + V_SYNC - 1  \nVS_START = V_DISPLAY + V_TOP \nVS_END = V_DISPLAY + V_TOP + VSYNC -1  ');
gettext('**Sincronización horizontal**  \n\n* H_DIPLAY = 256 -->  Resolución  \n* H_BACK = 48  \n* H_FRONT = 29  \n* H_SYNC = 48');
gettext('**Sincronización vertical**  \n\n* V_DIPLAY = 240 -->  Resolución  \n* V_TOP = 136  \n* V_BOTTOM = 145  \n* V_SYNC = 3');
gettext('```\n                         H_MAX (pixeles)  \n<------------------------------------------------------------>  \nH_DISPLAY (visible)      |   H_FRONT   | H_SYNC   |  H_BACK  |\n<------------------------><------------><--------><---------->  \n                                       ^          ^           \n                                       |          |   \n                                   HS_START     HS_END\n```');
gettext('**Generación ventana visibilidad**');
gettext('**Display_on**');
gettext('Funciona con los dos monitores: Fuji y LCDtv  \n\nAunque he tenido que ajustar la posición dentro del propio  \nmonitor  ');
gettext('Icemove4');
gettext('Icemove4: Controlador de 4 movimientos para el Icebot');
gettext('# ICEmove4\n\nControlador para el [robot Icebot](https://github.com/Obijuan/icebot/wiki), que genera **4 movimientos**:  \nParado, giro derecha (arco), giro izquierda (arco) y adelante');
gettext('**Código del movimiento**');
gettext('**Motor de la rueda derecha**');
gettext('**Motor de la rueda izquierda**');
gettext('## Tabla de movimientos\n\n| Código de entrada | Movimiento del Robot   |\n|-------------------|------------------------|\n|  0                |  Parado                |\n|  1                |  Giro derecha (arco)   |\n|  2                |  Giro izquierda (arco) |\n|  3                |  Adelante              |');
gettext('**Entrada de reloj**');
gettext('Icemove9');
gettext('Icemove9: Controlador de 9 movimientos para el Icebot');
gettext('# ICEmove9\n\nControlador de 9 movimientos para el robot Icebot  \n(Entrada de 4 bits)');
gettext('## Tabla de movimientos\n\n| Código de entrada | Movimiento del Robot   |\n|-------------------|------------------------|\n|  0, 1, 2, 3       |  Parado                |\n|  4,6              |  Arco derecha          |\n|  5,7              |  Arco izquierda-atrás  |\n|  8,9              |  Arco derecha-atrás    |\n|  10,11            |  Arco izquierda        |\n|  12               |  Giro derecha          |\n|  13               |  Atrás                 |\n|  14               |  Adelante              |\n|  15               |  Giro izquierda        |');
gettext('ADC');
gettext('PWM');
gettext('VGA');
gettext('01-Potentiometer-LEDs');
gettext('**ADC_SDA** (INOUT)  ');
gettext('**ADC_SCL**');
gettext('**Frecuencia de**  \n**muestreo**');
gettext('**Canal 0**');
gettext('## Ejemplo 1: Lectura de un potenciómetro\n\nSe lee el potenciómetro conectado al canal 0 de la icezum Alhambra  \ny se muestra su valor digital (8 bits) en los LEDs  \nLa lectura se realiza 20 veces por segundo (20Hz)');
gettext('**Conversor A/D**');
gettext('Valor digital del  \npotenciómetro');
gettext('02-Potentiometer-serial');
gettext('## Ejemplo 2: Lectura de un potenciómetro y envío al PC\n\nSe lee el potenciómetro conectado al canal 0 de la icezum Alhambra  \ny se envía su valor digital al PC, además de mostrarse en los LEDs  \nLa lectura se realiza 100 veces por segundo (100Hz)');
gettext('**Transmisor serie**');
gettext('03-Potentiometer-servo');
gettext('## Ejemplo 3: Moviendo un servo con el potenciómetro  \n\nLa salida del conversor A/D se conecta a la entrada de un servo para  \ncambiar su posición con el potenciómetro\n\n');
gettext('04-Potentiometer-BCD-7Seg');
gettext('## Ejemplo 4: Mostrar potenciómetro en un display de 7 segmentos  \n\nEl valor analógico se divide en 16 niveles (4 bits) y se muestra en un  \ndisplay de 7 segmentos como un dígito hexadecimal. Sólo hay que quedarse  \ncon los 4 bits más significativos de la muestra y sacarlos por el  \n7 segmentos\n');
gettext('Mostrar el valor en  \nbinario en los LEDs');
gettext('Mostrar el valor en  \nel display de 7 seg  \nen hexadecimal');
gettext('4 bits de mayor peso  \nde la muestra');
gettext('Se puede ver en funcionamiento en este [vídeo de Youtube](https://www.youtube.com/watch?v=8GTkoyxFUTY):\n\n[![Click to see the youtube video](http://img.youtube.com/vi/8GTkoyxFUTY/0.jpg)](https://www.youtube.com/watch?v=8GTkoyxFUTY)');
gettext('05-Potentiometer-8LEDs');
gettext('## Ejemplo 5: Usar el potenciómetro para seleccionar entre 8 opciones  \n\nEl valor analógico se divide en 8 niveles (3 bits) y se muestra en los  \n8 LEDs, encendiendo un único led por cada nivel. Esto permite usarlo como  \nun selector entre 8 opciones\n');
gettext('Decodificador de  \n3 a 8');
gettext('Se puede ver en funcionamiento en este [vídeo de Youtube](https://www.youtube.com/watch?v=SLV-YsCvrmw):\n\n[![Click to see the youtube video](http://img.youtube.com/vi/SLV-YsCvrmw/0.jpg)](https://www.youtube.com/watch?v=SLV-YsCvrmw)');
gettext('Alhambra II_adc-test-01');
gettext('**Selección de**  \n**Canal analógico**');
gettext('Test-16-levels');
gettext('01-Brillo-LED-pulsador-2bits');
gettext('**Valor de la anchura**  \n');
gettext('## Ejemplo 1. PWM: Cuatro niveles de Brillo en LED, con pulsador\n\nGeneración de una **señal PWM** de **4 niveles**: 0, 25%, 50%, 75% a frecuencia máxima (sin prescalado)  \nCon el pulsador se cambia de un nivel a otro, y se vuelve al comienzo. El nivel actual se muestra  \nen los LEDs 1 y 0\n\nEl contador principal es de **4 bits**, por lo que la **frecuencia** del PWM es de **3MHz**');
gettext('**Incrementar brillo**');
gettext('**Nivel actual**');
gettext('Mostrar el nivel en  \nlos LEDs (en binario)');
gettext('**Unidad de PWM**');
gettext('Incrementar contador con  \ncada pulsación');
gettext('Usar el tic del pulsador  \npara establecer el nuevo nivel  \n(en el siguiente ciclo de reloj)');
gettext('## Montaje\n\n![Esquema del montaje](https://github.com/Obijuan/Cuadernos-tecnicos-FPGAs-libres/raw/master/wiki/CT1-PWM-LED/bloque-ej-02.png)');
gettext('\n* **Nivel 1**: \n  * 100 muestras\n  * Freq. muestreo: 24MHz\n  * \n![](https://github.com/Obijuan/Cuadernos-tecnicos-FPGAs-libres/raw/master/wiki/CT1-PWM-LED/bloque-ej-03.png)');
gettext('## Mediciones\n');
gettext('* **Todos lo niveles**, medidos por separado y agrupados  \ny agrupados en una única figura\n\n![](https://github.com/Obijuan/Cuadernos-tecnicos-FPGAs-libres/raw/master/wiki/CT1-PWM-LED/bloque-ej-04.png)');
gettext('[Vídeo de funcionamiento en youtube](https://www.youtube.com/watch?v=SfixjIhfQ2c)\n\n[![Click to see the youtube video](http://img.youtube.com/vi/SfixjIhfQ2c/0.jpg)](https://www.youtube.com/watch?v=SfixjIhfQ2c)');
gettext('02-Brillo-LED-pulsadores-4bits');
gettext('**16 Niveles:**  \n**0**: No hay PWM  \n**15**: 93.75%  \n');
gettext('## Ejemplo 2. PWM: 16 niveles de brillo en LED, con prescalado\n\nSeñal **PWM de 16** niveles: 0, 6.2% ... 93.75% y frecuencia de **91.5 Hz**  \n(Prescalado de 13 bits) para controlar el brillo de un LED con **dos pulsadores**,  \nuno para incrementar el brillo y otro para disminuirlo. El nivel de brillo actual  \nse muestra en los **LEDs 3-0** (4 bits). El LED controlado es el **LED 7**');
gettext('**Decrementar brillo**');
gettext('Contador con  \nincremento/decremento');
gettext('Introducir como parámetro  \nlos bits de prescalado');
gettext('## Montaje\n\n![](https://raw.githubusercontent.com/Obijuan/Cuadernos-tecnicos-FPGAs-libres/master/wiki/CT1-PWM-LED/ej4-06.png)');
gettext('[Vídeo de funcionamiento en youtube](https://www.youtube.com/watch?v=FaMuqZrrD1Y)\n\n[![Click to see the youtube video](http://img.youtube.com/vi/FaMuqZrrD1Y/0.jpg)](https://www.youtube.com/watch?v=FaMuqZrrD1Y)');
gettext('## Mediciones\n\n');
gettext('* **Medición niveles 4, 10 y 15**: Se han tomado por separado y juntado en esta figura\n\n![](https://github.com/Obijuan/Cuadernos-tecnicos-FPGAs-libres/raw/master/wiki/CT1-PWM-LED/bloque-ej-07.png)');
gettext('* **Medición nivel 1:** (PWM 6.25%): 2M muestras. Frecuencia muestreo: 24MHz \n\n![](https://github.com/Obijuan/Cuadernos-tecnicos-FPGAs-libres/raw/master/wiki/CT1-PWM-LED/bloque-ej-06.png)');
gettext('03-Brillo-LEDs-pot-8bits');
gettext('**Frecuencia de lectura**  \n**del potenciómetro**');
gettext('## Ejemplo 3: 256 niveles de brillo en LEDs, con potenciómetro\n\nSe usa una unidad PWM de 46.9KHz y 8bits para variar la intesidad de los  \n8 LEDs de la Icezim Alhambra a la vez. Hay 256 niveles de intesidad');
gettext('[Vídeo de funcionamiento en youtube](https://www.youtube.com/watch?v=ln9it85tJiM)\n\n[![Click to see the youtube video](http://img.youtube.com/vi/ln9it85tJiM/0.jpg)](https://www.youtube.com/watch?v=ln9it85tJiM)');
gettext('**Para medir**');
gettext('## Mediciones');
gettext('* **Medición nivel 1**: (PWM 0.39%): 5K muestras. Frecuencia muestreo: 24MHz \n\n![](https://github.com/Obijuan/Cuadernos-tecnicos-FPGAs-libres/raw/master/wiki/CT1-PWM-LED/bloque-ej-10.png)');
gettext('* **Medición de tres anchuras**: Se han medido por separado y juntado en esta figura\n\n![](https://github.com/Obijuan/Cuadernos-tecnicos-FPGAs-libres/raw/master/wiki/CT1-PWM-LED/bloque-ej-11.png)');
gettext('## Montaje\n\n* **Elementos**: **Potenciómetro** y **analizador lógico** para hacer las medicicones\n\n![](https://github.com/Obijuan/Cuadernos-tecnicos-FPGAs-libres/raw/master/wiki/CT1-PWM-LED/bloque-ej-09.png)');
gettext('04-Brillo-LEDs-serial-8bits');
gettext('**Receptor serie**\n');
gettext('Valor del brillo  \n(0-255)');
gettext('## Ejemplo 4: Servidor hardware de 256 niveles de brillo en LEDs\n\nEjemplo de control del brillo de los 8 LEDs (a la vez) con una unidad  \nde PWM de 46.8Hz a través del puero serie. El valor recibido (0-255)  \ndetermina el nivel de intensidad de brillo.');
gettext('[Vídeo de funcionamiento en youtube](https://www.youtube.com/watch?v=Im8lueRn09U)\n\n[![Click to see the youtube video](http://img.youtube.com/vi/Im8lueRn09U/0.jpg)](https://www.youtube.com/watch?v=Im8lueRn09U)');
gettext('Alhambra-II');
gettext('01-Green-screen');
gettext('Señales de Rojo y azul **deshabilitadas**');
gettext('**Señal de sincronismo**  \n**Horizontal**');
gettext('**Señal de sincronismo**  \n**Vertical**');
gettext('La señal de visibilidad se  \nsaca directamente por el canal  \nverde. Toda la zona visible se deberá poner  \nde color verde');
gettext('# VGA RETRO: Pantalla verde\n\nEjemplo que pone toda la **zona visible** en **verde**.  \nProbar este ejemplo la primera vez para comprobar  \nque el hardware está bien y que en el monitor se  \nve el fondo (o parte del fondo verde).  No importa  \nsi está descuadrado. En el siguiente ejemplo haremos  \nel ajuste');
gettext('La señal visible se pone a 1  \ncuando el controlador está recorriendo  \nla zona visible del monitor');
gettext('En [este vídeo](https://www.youtube.com/watch?v=B6MfKmivRbU) se muestra su funcionamiento  \n\n[![Click to see the youtube video](http://img.youtube.com/vi/B6MfKmivRbU/0.jpg)](https://www.youtube.com/watch?v=B6MfKmivRbU)');
gettext('Esta es la imagen con el **monitor en verde**:\n\n![](https://github.com/Obijuan/mynotes/raw/master/wiki/2018-12-22-VGA/green-01.jpg)');
gettext('## Conexión al monitor VGA\n\nPuedes encontrar información de cómo se ha conectado  \nla Icezum Alhambra al monitor [en este enlace](https://github.com/Obijuan/MonsterLED/wiki)');
gettext('02-VGA-adjust');
gettext('**Marco de ajuste**');
gettext('El marco se muestra en verde  \n(se saca por el canal verde)');
gettext('**VGA RETRO**\n\nSe dibuja un marco verde alrededor de la zona  \nvisible. Este circuito se usa para ajustar los  \nvalores del monitor, centrando el marco en la  \npantalla');
gettext('01-Green-screen');
